define(function(require, exports, module) {
// Generated by CoffeeScript 1.4.0
/*

  SongLocator resolver for Deezer.

  2013 (c) Andrey Popp <8mayday@gmail.com>
*/

var BaseResolver, Resolver, extend, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ref = require('./songlocator-base'), BaseResolver = _ref.BaseResolver, extend = _ref.extend;

Resolver = (function(_super) {

  __extends(Resolver, _super);

  function Resolver() {
    return Resolver.__super__.constructor.apply(this, arguments);
  }

  Resolver.prototype.name = 'deezer';

  Resolver.prototype.score = 0.9;

  Resolver.prototype.search = function(qid, query) {
    var _this = this;
    return this.request({
      url: 'http://api.deezer.com/2.0/search',
      params: {
        q: query
      },
      callback: function(error, response) {
        var item, results;
        if (error != null) {
          return;
        }
        if (!(response.data.length > 0)) {
          return;
        }
        results = (function() {
          var _i, _len, _ref1, _ref2, _ref3, _ref4, _results;
          _ref1 = response.data;
          _results = [];
          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
            item = _ref1[_i];
            _results.push({
              title: item.title,
              artist: (_ref2 = item.artist) != null ? _ref2.name : void 0,
              album: (_ref3 = item.album) != null ? _ref3.title : void 0,
              source: this.name,
              id: item.id,
              linkURL: item.link,
              imageURL: "" + ((_ref4 = item.album) != null ? _ref4.cover : void 0) + "?size=big",
              audioURL: void 0,
              audioPreviewURL: item.preview,
              mimetype: 'audio/mpeg',
              duration: item.duration
            });
          }
          return _results;
        }).call(_this);
        results = results.slice(0, _this.options.searchMaxResults);
        return _this.results(qid, results);
      }
    });
  };

  return Resolver;

})(BaseResolver);

extend(exports, {
  Resolver: Resolver
});

if (typeof window !== "undefined" && window !== null) {
  if (!(window.SongLocator != null)) {
    throw new Error('no songlocator-base module was loaded');
  }
  window.SongLocator.Deezer = {};
  extend(window.SongLocator.Deezer, exports);
}
});
